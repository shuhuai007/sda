
<workflow-app xmlns="uri:oozie:workflow:0.2" name="java-main-wf">
    <start to="java-node"/>
    <action name="java-node">
        <java>
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <main-class>org.apache.oozie.example.DemoJavaMain</main-class>
            <arg>Hello</arg>
            <arg>Oozie!</arg>
        </java>
        <ok to="parallel-node"/>
        <error to="fail"/>
    </action>

    <fork name="parallel-node">
        <path start="check-user-flume-input-node"/>
        <path start="check-question-flume-input-node"/>
    </fork>

    <decision name="check-user-flume-input-node">
        <switch>
            <case to="shell-user-node">${fs:dirSize(concat(nameNode, '/user/flume/project/sda/spider/user')) gt 0}</case>
            <default to="join-node"/>
        </switch>
    </decision>

    <decision name="check-question-flume-input-node">
        <switch>
            <case to="shell-question-node">${fs:dirSize(concat(nameNode, '/user/flume/project/sda/spider/question')) gt 0}</case>
            <default to="join-node"/>
        </switch>
    </decision>

    <action name="shell-user-node">
        <shell xmlns="uri:oozie:shell-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <exec>move-data.sh</exec>
            <argument>-i</argument>
            <argument>/user/flume/project/sda/spider/user</argument>
            <argument>-o</argument>
            <argument>/user/flume/project/test_user_table</argument>
            <file>script/shell/move-data.sh</file>
        </shell>
        <ok to="hive2-user-add-node"/>
        <error to="fail"/>
    </action>

    <action name="hive2-user-add-node">
        <hive2 xmlns="uri:oozie:hive2-action:0.1">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <jdbc-url>${jdbcURL}</jdbc-url>
            <script>script/hive/user-add.q</script>
            <param>INPUT=/user/flume/project/test_table</param>
            <!--<param>OUTPUT=/user/${wf:user()}/${examplesRoot}/output-data/hive2</param>-->
        </hive2>
        <ok to="hive2-user-duplicate-remove-node"/>
        <error to="fail"/>
    </action>

    <action name="hive2-user-duplicate-remove-node">
        <hive2 xmlns="uri:oozie:hive2-action:0.1">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <jdbc-url>${jdbcURL}</jdbc-url>
            <script>script/hive/user-duplicate-remove.q</script>
        </hive2>
        <ok to="join-node"/>
        <error to="fail"/>
    </action>

    <action name="shell-question-node">
        <shell xmlns="uri:oozie:shell-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <exec>move-data.sh</exec>
            <argument>-i</argument>
            <argument>/user/flume/project/sda/spider/question</argument>
            <argument>-o</argument>
            <argument>/user/flume/project/test_question_table</argument>
            <file>script/shell/move-data.sh</file>
        </shell>
        <ok to="hive2-question-add-node"/>
        <error to="fail"/>
    </action>

    <action name="hive2-question-add-node">
        <hive2 xmlns="uri:oozie:hive2-action:0.1">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <jdbc-url>${jdbcURL}</jdbc-url>
            <script>script/hive/question-add.q</script>
            <param>INPUT=/user/flume/project/test_question_table</param>
        </hive2>
        <ok to="hive2-question-duplicate-remove-node"/>
        <error to="fail"/>
    </action>

    <action name="hive2-question-duplicate-remove-node">
        <hive2 xmlns="uri:oozie:hive2-action:0.1">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <jdbc-url>${jdbcURL}</jdbc-url>
            <script>script/hive/question-duplicate-remove.q</script>
        </hive2>
        <ok to="sqoop2mysql-node"/>
        <error to="fail"/>
    </action>

    <action name="sqoop2mysql-node">
        <sqoop xmlns="uri:oozie:sqoop-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
                <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <command>
                export --connect jdbc:mysql://10.29.10.111:3306/sda  --username root --password root --table zhihu_question_id_incremental --input-fields-terminated-by "\001"  --export-dir /apps/hive/warehouse/sda.db/zhihu_question_id_incremental
            </command>
        </sqoop>
        <ok to="join-node"/>
        <error to="fail"/>
    </action>

    <join name="join-node" to="end"/>

    <kill name="fail">
        <message>Error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>